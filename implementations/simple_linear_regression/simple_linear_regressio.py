# -*- coding: utf-8 -*-
"""simple_linear_regressio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18zeAVN26-V6_aLIG25zFUvkqhjpni3BU

# Simple Linear Regression

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

# Importing the dataset
dataset = pd.read_csv('Salary_Data.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

"""## Splitting the dataset into the Training set and Test set"""

# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

"""## Training the Simple Linear Regression model on the Training set"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

"""## Predicting the Test set results"""

y_pred = regressor.predict(X_test)

"""## Visualising the Training set results"""

plt.scatter(X_train, y_train, color='red')
plt.plot(X_train, regressor.predict(X_train))
plt.title('Salary vs Experience : training set')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')

"""## Visualising the Test set results"""

plt.scatter(X_test, y_test, color='red')
plt.plot(X_test, y_pred)
plt.title('Salary vs Experience : test set')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')

"""##Making a simple prediction"""

regressor.predict([[12]])

"""Always take into account that the predict() method expects a 2D array, therefore we sent the y value for ours prediction as a 2D array -> [[n]]"""

print(regressor.coef_)
print(regressor.intercept_)

"""The ecuation of our simple linear regression model is: 
  Y = coef_ * X + intercept_ // Salary = 9312.5 * YearsOfExperience + 26780.1
"""

